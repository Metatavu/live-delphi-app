{"version":3,"sources":["../../src/js/live-delphi-auth.js"],"names":["$","widget","options","serverUrl","_create","_sessionId","authenticate","_keycloak","_getKeycloak","init","onLoad","success","authenticated","element","trigger","error","err","console","token","sessionId","join","post","proxy","data","fail","Keycloak","call"],"mappings":";;AAAA;AACA,CAAC,YAAW;AACV;;AAEAA,IAAEC,MAAF,CAAS,uBAAT,EAAkC;;AAEhCC,aAAS;AACPC,iBAAW;AADJ,KAFuB;;AAMhCC,aAAU,mBAAW;AACnB,WAAKC,UAAL,GAAkB,IAAlB;AACD,KAR+B;;AAUhCC,kBAAc,wBAAY;AAAA;;AACxB,WAAKC,SAAL,GAAiB,KAAKC,YAAL,EAAjB;AACA,WAAKD,SAAL,CAAeE,IAAf,CAAoB,EAAEC,QAAQ,gBAAV,EAApB,EACGC,OADH,CACW,UAACC,aAAD,EAAmB;AAC1B,YAAIA,aAAJ,EAAmB;AACjB,gBAAKC,OAAL,CAAaC,OAAb,CAAqB,eAArB;AACD,SAFD,MAEO;AACL,gBAAKD,OAAL,CAAaC,OAAb,CAAqB,wBAArB;AACD;AACF,OAPH,EAQGC,KARH,CAQS,UAACC,GAAD,EAAS;AACdC,gBAAQF,KAAR,CAAc,uBAAd,EAAuCC,GAAvC;AACA,cAAKH,OAAL,CAAaC,OAAb,CAAqB,sBAArB;AACD,OAXH;AAYD,KAxB+B;;AA0BhCI,WAAO,iBAAY;AACjB,aAAO,KAAKX,SAAL,CAAeW,KAAtB;AACD,KA5B+B;;AA8BhCC,eAAW,qBAAY;AACrB,aAAO,KAAKd,UAAZ;AACD,KAhC+B;;AAkChCe,UAAM,gBAAY;AAChBpB,QAAEqB,IAAF,CAAO,KAAKnB,OAAL,CAAaC,SAAb,GAAyB,OAAhC,EAAyC;AACvCe,eAAO,KAAKA,KAAL;AADgC,OAAzC,EAEGlB,EAAEsB,KAAF,CAAQ,UAAUC,IAAV,EAAgB;AACzB,aAAKlB,UAAL,GAAkBkB,KAAKJ,SAAvB;AACA,aAAKN,OAAL,CAAaC,OAAb,CAAqB,QAArB;AACD,OAHE,EAGA,IAHA,CAFH,EAMCU,IAND,CAMOxB,EAAEsB,KAAF,CAAQ,YAAY;AACzB,aAAKT,OAAL,CAAaC,OAAb,CAAqB,YAArB;AACD,OAFM,EAEJ,IAFI,CANP;AASD,KA5C+B;;AA8ChCN,kBAAc,wBAAY;AACxB,aAAOiB,SAAS,KAAKvB,OAAL,CAAaC,SAAb,GAAyB,gBAAlC,CAAP;AACD;;AAhD+B,GAAlC;AAqDD,CAxDD,EAwDGuB,IAxDH","file":"live-delphi-auth.js","sourcesContent":["/* global window, document, WebSocket, MozWebSocket, $, _*/\n(function() {\n  'use strict';\n  \n  $.widget(\"custom.liveDelphiAuth\", {\n    \n    options: {\n      serverUrl: 'http://localhost:8000'\n    },\n    \n    _create : function() {\n      this._sessionId = null;\n    },\n    \n    authenticate: function () {\n      this._keycloak = this._getKeycloak();\n      this._keycloak.init({ onLoad: 'login-required' })\n        .success((authenticated) => {\n          if (authenticated) {\n            this.element.trigger(\"authenticated\");\n          } else {\n            this.element.trigger(\"authentication-failure\");\n          }\n        })\n        .error((err) => {\n          console.error(\"Authentication failed\", err);\n          this.element.trigger(\"authentication-error\");\n        });\n    },\n    \n    token: function () {\n      return this._keycloak.token;\n    },\n    \n    sessionId: function () {\n      return this._sessionId;\n    },\n    \n    join: function () {\n      $.post(this.options.serverUrl + '/join', {\n        token: this.token()\n      }, $.proxy(function (data) {\n        this._sessionId = data.sessionId;\n        this.element.trigger(\"joined\");\n      }, this))\n      .fail( $.proxy(function () {\n        this.element.trigger(\"join-error\");\n      }, this));\n    },\n    \n    _getKeycloak: function () {\n      return Keycloak(this.options.serverUrl + '/keycloak.json');\n    }\n    \n  });\n  \n  \n}).call(this);"]}
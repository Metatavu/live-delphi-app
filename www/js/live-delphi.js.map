{"version":3,"sources":["../../src/js/live-delphi.js"],"names":["$","widget","_create","serverConfig","getConfig","server","secure","host","port","httpProtocol","wsProtocol","console","log","serverUrl","wsUrl","element","on","proxy","_onAuthenticated","_onJoined","_onConnect","_onMessageAnswerChanged","liveDelphiClient","liveDelphiAuth","sessionId","joinQuery","queryId","event","data","liveDelphiChart","userHash","x","y","document","body","liveDelphi"],"mappings":";;AAAA;;AAEA,CAAC,YAAU;AACT;;AAEAA,IAAEC,MAAF,CAAS,mBAAT,EAA8B;AAC5BC,aAAU,mBAAW;AACnB,UAAMC,eAAeC,YAAYC,MAAjC;AACA,UAAMC,SAASH,aAAaG,MAA5B;AACA,UAAMC,OAAOJ,aAAaI,IAA1B;AACA,UAAMC,OAAOL,aAAaK,IAA1B;AACA,UAAMC,eAAeH,SAAS,OAAT,GAAmB,MAAxC;AACA,UAAMI,aAAaJ,SAAS,KAAT,GAAiB,IAApC;;AAEAK,cAAQC,GAAR,CAAYT,YAAZ;;AAEA,UAAMU,YAAYJ,eAAe,KAAf,GAAuBF,IAAvB,GAA8B,GAA9B,GAAoCC,IAAtD;AACA,UAAMM,QAAQJ,aAAa,KAAb,GAAqBH,IAArB,GAA4B,GAA5B,GAAkCC,IAAhD;;AAEA,WAAKO,OAAL,CAAaC,EAAb,CAAgB,eAAhB,EAAiChB,EAAEiB,KAAF,CAAQ,KAAKC,gBAAb,EAA+B,IAA/B,CAAjC;AACA,WAAKH,OAAL,CAAaC,EAAb,CAAgB,QAAhB,EAA0BhB,EAAEiB,KAAF,CAAQ,KAAKE,SAAb,EAAwB,IAAxB,CAA1B;AACA,WAAKJ,OAAL,CAAaC,EAAb,CAAgB,SAAhB,EAA2BhB,EAAEiB,KAAF,CAAQ,KAAKG,UAAb,EAAyB,IAAzB,CAA3B;AACA,WAAKL,OAAL,CAAaC,EAAb,CAAgB,wBAAhB,EAA0ChB,EAAEiB,KAAF,CAAQ,KAAKI,uBAAb,EAAsC,IAAtC,CAA1C;;AAEAV,cAAQC,GAAR,CAAYC,SAAZ;;AAEA,WAAKE,OAAL,CAAaO,gBAAb,CAA8B;AAC5BR,eAAOA,KADqB;AAE5BD,mBAAWA;AAFiB,OAA9B;;AAKA,WAAKE,OAAL,CAAaQ,cAAb,CAA4B;AAC1BV,mBAAWA;AADe,OAA5B;;AAIA,WAAKE,OAAL,CAAaQ,cAAb,CAA4B,cAA5B;AACD,KA/B2B;;AAiC5BC,eAAW,qBAAY;AACrB,aAAO,KAAKT,OAAL,CAAaQ,cAAb,CAA4B,WAA5B,CAAP;AACD,KAnC2B;;AAqC5BE,eAAW,mBAAUC,OAAV,EAAmB;AAC5B,WAAKX,OAAL,CAAaO,gBAAb,CAA8B,WAA9B,EAA2C,KAAKE,SAAL,EAA3C,EAA6DE,OAA7D;AACD,KAvC2B;;AAyC5BR,sBAAkB,4BAAY;AAC5B,WAAKH,OAAL,CAAaQ,cAAb,CAA4B,MAA5B;AACD,KA3C2B;;AA6C5BJ,eAAW,qBAAY;AACrB,WAAKJ,OAAL,CAAaO,gBAAb,CAA8B,SAA9B,EAAyC,KAAKE,SAAL,EAAzC;AACA;AACA,WAAKC,SAAL,CAAe,sCAAf;AACD,KAjD2B;;AAmD5BL,gBAAY,oBAAUO,KAAV,EAAiBC,IAAjB,EAAuB;AACjC5B,QAAE,QAAF,EAAY6B,eAAZ;AACD,KArD2B;;AAuD5BR,6BAAyB,iCAAUM,KAAV,EAAiBC,IAAjB,EAAuB;AAC9C5B,QAAE,QAAF,EAAY6B,eAAZ,CAA4B,UAA5B,EAAwCD,KAAKE,QAA7C,EAAuD;AACrDC,WAAGH,KAAKG,CAD6C;AAErDC,WAAGJ,KAAKI;AAF6C,OAAvD;AAID;;AA5D2B,GAA9B;;AAgEAhC,IAAEiC,QAAF,EAAYjB,EAAZ,CAAe,aAAf,EAA8B,YAAM;AAClChB,MAAEiC,SAASC,IAAX,EAAiBC,UAAjB;AACD,GAFD;AAID,CAvED","file":"live-delphi.js","sourcesContent":["/* global getConfig */\n\n(function(){\n  'use strict';\n  \n  $.widget(\"custom.liveDelphi\", {    \n    _create : function() {\n      const serverConfig = getConfig().server;\n      const secure = serverConfig.secure;\n      const host = serverConfig.host;\n      const port = serverConfig.port;\n      const httpProtocol = secure ? 'https' : 'http';\n      const wsProtocol = secure ? 'wss' : 'ws';\n      \n      console.log(serverConfig);\n      \n      const serverUrl = httpProtocol + '://' + host + ':' + port;\n      const wsUrl = wsProtocol + '://' + host + ':' + port;\n      \n      this.element.on('authenticated', $.proxy(this._onAuthenticated, this));\n      this.element.on('joined', $.proxy(this._onJoined, this));\n      this.element.on('connect', $.proxy(this._onConnect, this));\n      this.element.on('message:answer-changed', $.proxy(this._onMessageAnswerChanged, this));\n      \n      console.log(serverUrl);\n      \n      this.element.liveDelphiClient({\n        wsUrl: wsUrl,\n        serverUrl: serverUrl\n      });\n      \n      this.element.liveDelphiAuth({\n        serverUrl: serverUrl\n      });\n      \n      this.element.liveDelphiAuth('authenticate'); \n    },\n    \n    sessionId: function () {\n      return this.element.liveDelphiAuth('sessionId');\n    },\n    \n    joinQuery: function (queryId) {\n      this.element.liveDelphiClient(\"joinQuery\", this.sessionId(), queryId);\n    },\n    \n    _onAuthenticated: function () {\n      this.element.liveDelphiAuth('join');\n    },\n    \n    _onJoined: function () {\n      this.element.liveDelphiClient('connect', this.sessionId());\n      // TODO: Move joinQuery call\n      this.joinQuery(\"2194774e-ebe9-49ce-bc6b-4e28645da40c\");\n    },\n    \n    _onConnect: function (event, data) {\n      $(\"#chart\").liveDelphiChart();\n    },\n    \n    _onMessageAnswerChanged: function (event, data) {\n      $(\"#chart\").liveDelphiChart('userData', data.userHash, {\n        x: data.x,\n        y: data.y\n      });\n    }\n    \n  });\n  \n  $(document).on(\"deviceready\", () => {\n    $(document.body).liveDelphi();      \n  });\n  \n})();\n"]}
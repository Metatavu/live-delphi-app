{"version":3,"sources":["../../src/js/live-delphi-chart.js"],"names":["$","widget","options","ticks","maxX","maxY","pendingTime","tooltipActive","fadeUpdateInterval","_create","_userHashes","_series","_scatterChart","Chart","element","type","data","datasets","_getSeries","tooltips","callbacks","title","items","label","item","onClick","event","canvas","target","x","layerX","y","layerY","chartArea","chartLeft","left","chartRight","right","chartTop","top","chartBottom","bottom","xValue","yValue","document","body","liveDelphiClient","bind","legend","display","scales","xAxes","position","min","max","stepSize","callback","value","index","values","yAxes","mirror","labelOffset","setInterval","proxy","_updateFade","forEach","dataset","pointBackgroundColor","_getColor","lastUpdated","_updateChart","userData","userHash","indexOf","Date","getTime","push","_getDataSet","update","_convertToRange","fromLow","fromHigh","toLow","toHigh","fromLength","toRange","newValue","updated","red","Math","floor","blue","age","opacity","join","showLine","pointRadius","call"],"mappings":"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","file":"live-delphi-chart.js","sourcesContent":["/* global window, document, WebSocket, MozWebSocket, $, _*/\n(function() {\n  'use strict';\n  \n  $.widget(\"custom.liveDelphiChart\", {\n    \n    options: {\n      ticks: [\"---\", \"--\", \"-\", \"-/+\", \"+\",\"++\", \"+++\"],\n      maxX: 6,\n      maxY: 6,\n      pendingTime: 1000,\n      tooltipActive: false,\n      fadeUpdateInterval: 200\n    },\n    \n    _create : function() {\n      this._userHashes = [];\n      this._series = [];\n      \n      this._scatterChart = new Chart(this.element, {\n        type: 'line',\n        data: {\n          datasets: this._getSeries()\n        },\n        options: {\n          tooltips: {\n            callbacks: {\n              title: function(items, data) {\n                return \"\";\n              },\n              label: function(item, data) {\n                return \"Lorem ipsum dolor sit amet...\";\n              }\n            }\n          },\n          onClick: function (event) {\n            var canvas = event.target;\n            var x = event.layerX;\n            var y = event.layerY;\n            var chartArea = this._scatterChart.chartArea;\n\n            var chartLeft = chartArea.left;\n            var chartRight = chartArea.right;\n            var chartTop = chartArea.top;\n            var chartBottom = chartArea.bottom;\n\n            var xValue = ((x - chartLeft) / chartRight) * this.options.maxX;\n            var yValue = this.options.maxY - (((y - chartTop) / chartBottom) * this.options.maxY);\n            \n            $(document.body).liveDelphiClient('sendMessage', {\n              'type': 'answer',\n              'x': xValue,\n              'y': yValue\n            });\n          }.bind(this),\n          legend: {\n            display: false\n          },\n          scales: {\n            xAxes: [{\n              type: 'linear',\n              position: 'bottom',\n              ticks: {\n                min: 0,\n                max: 6,\n                stepSize: 1,\n                callback: function(value, index, values) {\n                  return this.options.ticks[value];\n                }.bind(this)\n              }\n            }],\n            yAxes: [{\n              type: 'linear',\n              ticks: {\n                mirror: true,\n                labelOffset: -100,\n                min: 0,\n                max: 6,\n                stepSize: 1,\n                callback: function(value, index, values) {\n                  return this.options.ticks[value];\n                }.bind(this)\n              }\n            }]\n          }\n        }\n      });\n      \n      setInterval($.proxy(this._updateFade, this), this.options.fadeUpdateInterval);\n    },\n    \n    _updateFade: function () {\n       this._series.forEach($.proxy(function(dataset) {\n         dataset.pointBackgroundColor = this._getColor(dataset.data[0], dataset.lastUpdated);\n       }, this));\n       \n       this._updateChart();\n    },\n    \n    userData: function (userHash, data) {\n      var index = this._userHashes.indexOf(userHash);\n      if (index !== -1) {\n        var lastUpdated = new Date().getTime();\n        this._series[index].data[0] = data;\n        this._series[index].pointBackgroundColor = this._getColor(data, lastUpdated);\n        this._series[index].lastUpdated = lastUpdated;\n      } else {\n        this._userHashes.push(userHash);\n        this._series.push(this._getDataSet(data));\n      }\n      \n      this._updateChart();\n    },\n    _updateChart: function  () {\n      this._scatterChart.update();\n    },\n    \n    _convertToRange: function(value, fromLow, fromHigh, toLow, toHigh) {\n      var fromLength = fromHigh - fromLow;\n      var toRange = toHigh - toLow;\n      var newValue = toRange / (fromLength / value);\n      if (newValue < toLow) {\n        return toLow;\n      } else if (newValue > toHigh) {\n        return toHigh;\n      } else {\n        return newValue;\n      }\n    },\n    \n    _getColor: function (value, updated) {\n      var red = Math.floor(this._convertToRange(value.x, 0, this.options.maxX, 0, 255));\n      var blue = Math.floor(this._convertToRange(value.y, 0, this.options.maxY, 0, 255));\n      var age = new Date().getTime() - updated;\n      var opacity = this._convertToRange(age, 0, this.options.pendingTime, 0, 1);\n      return \"rgba(\" + [red, 50, blue, opacity].join(',') + \")\";\n    },\n    \n    _getDataSet: function (data) { \n      var lastUpdated = new Date().getTime();\n      return {showLine: false, data: [ data ], pointBackgroundColor : this._getColor(data, lastUpdated), pointRadius: 5, lastUpdated: lastUpdated};\n    },\n    \n    _getSeries: function() {\n      return this._series;\n    }\n    \n  });\n  \n  \n}).call(this);"]}
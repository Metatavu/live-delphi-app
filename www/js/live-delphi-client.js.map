{"version":3,"sources":["../../src/js/live-delphi-client.js"],"names":["$","widget","options","serverUrl","wsUrl","reconnectTimeout","_create","_state","_pendingMessages","_queryId","connect","sessionId","_webSocket","_createWebSocket","readyState","CONNECTING","onopen","proxy","_onWebSocketOpen","OPEN","_reconnect","onmessage","_onWebSocketMessage","onclose","_onWebSocketClose","onerror","_onWebSocketError","sendMessage","data","_sendMessage","joinQuery","queryId","post","element","trigger","fail","callback","console","log","_reconnectTimeout","clearTimeout","setTimeout","CLOSED","url","window","WebSocket","MozWebSocket","message","JSON","stringify","send","push","event","length","shift","parse","type","call"],"mappings":"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","file":"live-delphi-client.js","sourcesContent":["/* global window, document, WebSocket, MozWebSocket, $, _*/\n(function() {\n  'use strict';\n  \n  $.widget(\"custom.liveDelphiClient\", {\n    \n    options: {\n      serverUrl: 'http://localhost:8000',\n      wsUrl: 'ws://localhost:8000',\n      reconnectTimeout: 3000\n    },\n    \n    _create : function() {\n      this._state = null;\n      this._pendingMessages = [];\n      this._queryId = null;\n    },\n    \n    connect: function (sessionId) {\n      this._state = 'CONNECTING';\n      \n      this._webSocket = this._createWebSocket(sessionId);\n      if (!this._webSocket) {\n        // Handle error  \n        return;\n      } \n      \n      switch (this._webSocket.readyState) {\n        case this._webSocket.CONNECTING:\n          this._webSocket.onopen = $.proxy(this._onWebSocketOpen, this);\n        break;\n        case this._webSocket.OPEN:\n          this._onWebSocketOpen();\n        break;\n        default:\n          this._reconnect();\n        break;\n      }\n      \n      this._webSocket.onmessage = $.proxy(this._onWebSocketMessage, this);\n      this._webSocket.onclose = $.proxy(this._onWebSocketClose, this);\n      this._webSocket.onerror = $.proxy(this._onWebSocketError, this);\n    },\n    \n    sendMessage: function (data) {\n      this._sendMessage(data);\n    },\n    \n    joinQuery: function (sessionId, queryId) {\n      $.post(this.options.serverUrl + '/joinQuery/' + queryId, {\n        sessionId: sessionId\n      }, $.proxy(function (data) {\n        this._queryId = queryId;\n        \n        this.sendMessage({\n          'type': 'join-query'\n        });\n        \n        this.element.trigger(\"join-query\", { \n          queryId: queryId\n        }); \n      }, this))\n      .fail( $.proxy(function () {\n        callback(\"error\");\n      }, this));\n    },\n    \n    _reconnect: function () {\n      console.log(\"Reconnecting...\");\n\n      if (this._reconnectTimeout) {\n        clearTimeout(this._reconnectTimeout);\n      }\n      \n      if (!this._webSocket || this._webSocket.readyState !== this._webSocket.CONNECTING) {\n        this.connect();\n      }\n      \n      this._reconnectTimeout = setTimeout($.proxy(function () {\n        console.log(\"timeout socket state: \" + this._webSocket.readyState);\n        \n        if (this._webSocket.readyState === this._webSocket.CLOSED) {\n          this._reconnect();\n        }\n      }, this), this.options.reconnectTimeout);\n    },\n\n    _createWebSocket: function (sessionId) {\n      const url = this.options.wsUrl + '/' + sessionId;\n      if ((typeof window.WebSocket) !== 'undefined') {\n        return new WebSocket(url);\n      } else if ((typeof window.MozWebSocket) !== 'undefined') {\n        return new MozWebSocket(url);\n      }\n    },\n    \n    _sendMessage: function (data) {\n      const message = JSON.stringify(data);\n      \n      if (this._state === 'CONNECTED') {\n        this._webSocket.send(message);\n      } else {\n        this._pendingMessages.push(message);\n      }\n    },\n    \n    _onWebSocketOpen: function (event) {\n      while (this._pendingMessages.length) {\n        this._webSocket.send(this._pendingMessages.shift());\n      }\n      \n      this._state = 'CONNECTED';\n      \n      this.element.trigger(\"connect\", { }); \n      \n      console.log(\"Connected\");\n    },\n    \n    _onWebSocketMessage: function (event) {\n      const message = JSON.parse(event.data);\n      this.element.trigger(\"message:\" + message.type, message.data); \n    },\n    \n    _onWebSocketClose: function (event) {\n      console.log(\"Socket closed\");\n      this._reconnect();\n    },\n    \n    _onWebSocketError: function (event) {\n      console.log(\"Socket error\");\n      this._reconnect();\n    }\n    \n  });\n  \n  \n}).call(this);"]}